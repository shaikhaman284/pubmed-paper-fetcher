[tool.poetry]
name = "pubmed-paper-fetcher"
version = "0.1.0"
description = "A tool to fetch PubMed papers from pharmaceutical/biotech companies"
authors = ["Shaikh Aman <shaikhamanksf@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/shaikhaman284/pubmed-paper-fetcher"
repository = "https://github.com/shaikhaman284/pubmed-paper-fetcher"
keywords = ["pubmed", "pharmaceutical", "biotech", "research", "papers"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Information Analysis",
]

[tool.poetry.dependencies]
python = "^3.12"
requests = ">=2.32.4,<3.0.0"
lxml = ">=6.0.0,<7.0.0"
click = ">=8.2.1,<9.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.2"
pytest-cov = "^4.1.0"
black = "^23.7.0"
flake8 = "^6.0.0"
mypy = "^1.5.1"
types-requests = "^2.31.0"

[tool.poetry.scripts]
get-papers-list = "pubmed_paper_fetcher.main:main"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--cov=pubmed_paper_fetcher --cov-report=term-missing"